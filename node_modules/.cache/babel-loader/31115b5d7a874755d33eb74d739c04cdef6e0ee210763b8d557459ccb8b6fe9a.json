{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3001';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor for authentication\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Service functions for movies\nexport const movieService = {\n  getAll: () => api.get('/movies'),\n  // Thay đổi phương thức getById\n  getById: id => api.get(`/movies/${id.toString()}`),\n  getNowPlaying: () => api.get('/movies?releaseDate_lte=2025-04-17'),\n  getUpcoming: () => api.get('/movies?releaseDate_gt=2025-04-17')\n};\n\n// Service functions for cinemas\nexport const cinemaService = {\n  getAll: () => api.get('/cinemas'),\n  getById: id => api.get(`/cinemas/${id}`)\n};\n\n// Service functions for showtimes\nexport const showTimeService = {\n  getAll: () => api.get('/showTimes'),\n  getById: id => api.get(`/showTimes/${id}`),\n  getByMovieId: movieId => api.get(`/showTimes?movieId=${movieId}`),\n  getByCinemaId: cinemaId => api.get(`/showTimes?cinemaId=${cinemaId}`),\n  getByMovieAndCinema: (movieId, cinemaId) => api.get(`/showTimes?movieId=${movieId}&cinemaId=${cinemaId}`),\n  getByDate: date => api.get(`/showTimes?date=${date}`)\n};\n\n// Service functions for seats\nexport const seatService = {\n  getByShowTimeId: showTimeId => api.get(`/seats?showTimeId=${showTimeId}`),\n  updateSeat: (seatId, seatData) => api.patch(`/seats/${seatId}`, seatData)\n};\n\n// Service functions for bookings\nexport const bookingService = {\n  getAll: () => api.get('/bookings'),\n  getById: id => api.get(`/bookings/${id}`),\n  getByUserId: userId => api.get(`/bookings?userId=${userId}`),\n  create: bookingData => api.post('/bookings', bookingData),\n  update: (id, bookingData) => api.put(`/bookings/${id}`, bookingData),\n  delete: id => api.delete(`/bookings/${id}`)\n};\n\n// Service functions for auth\nexport const authService = {\n  login: credentials => api.post('/login', credentials),\n  register: userData => api.post('/users', userData),\n  getCurrentUser: () => {\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      return api.get(`/users/${userId}`);\n    }\n    return Promise.reject('No user logged in');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","movieService","getAll","get","getById","id","toString","getNowPlaying","getUpcoming","cinemaService","showTimeService","getByMovieId","movieId","getByCinemaId","cinemaId","getByMovieAndCinema","getByDate","date","seatService","getByShowTimeId","showTimeId","updateSeat","seatId","seatData","patch","bookingService","getByUserId","userId","bookingData","post","update","put","delete","authService","login","credentials","register","userData","getCurrentUser"],"sources":["D:/Zalo Received Files/cinema-booking/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3001';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor for authentication\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Service functions for movies\r\nexport const movieService = {\r\n  getAll: () => api.get('/movies'),\r\n  // Thay đổi phương thức getById\r\n  getById: (id) => api.get(`/movies/${id.toString()}`),\r\n  getNowPlaying: () => api.get('/movies?releaseDate_lte=2025-04-17'),\r\n  getUpcoming: () => api.get('/movies?releaseDate_gt=2025-04-17'),\r\n};\r\n\r\n// Service functions for cinemas\r\nexport const cinemaService = {\r\n  getAll: () => api.get('/cinemas'),\r\n  getById: (id) => api.get(`/cinemas/${id}`),\r\n};\r\n\r\n// Service functions for showtimes\r\nexport const showTimeService = {\r\n  getAll: () => api.get('/showTimes'),\r\n  getById: (id) => api.get(`/showTimes/${id}`),\r\n  getByMovieId: (movieId) => api.get(`/showTimes?movieId=${movieId}`),\r\n  getByCinemaId: (cinemaId) => api.get(`/showTimes?cinemaId=${cinemaId}`),\r\n  getByMovieAndCinema: (movieId, cinemaId) => \r\n    api.get(`/showTimes?movieId=${movieId}&cinemaId=${cinemaId}`),\r\n  getByDate: (date) => api.get(`/showTimes?date=${date}`),\r\n};\r\n\r\n// Service functions for seats\r\nexport const seatService = {\r\n  getByShowTimeId: (showTimeId) => api.get(`/seats?showTimeId=${showTimeId}`),\r\n  updateSeat: (seatId, seatData) => api.patch(`/seats/${seatId}`, seatData),\r\n};\r\n\r\n// Service functions for bookings\r\nexport const bookingService = {\r\n  getAll: () => api.get('/bookings'),\r\n  getById: (id) => api.get(`/bookings/${id}`),\r\n  getByUserId: (userId) => api.get(`/bookings?userId=${userId}`),\r\n  create: (bookingData) => api.post('/bookings', bookingData),\r\n  update: (id, bookingData) => api.put(`/bookings/${id}`, bookingData),\r\n  delete: (id) => api.delete(`/bookings/${id}`),\r\n};\r\n\r\n// Service functions for auth\r\nexport const authService = {\r\n  login: (credentials) => api.post('/login', credentials),\r\n  register: (userData) => api.post('/users', userData),\r\n  getCurrentUser: () => {\r\n    const userId = localStorage.getItem('userId');\r\n    if (userId) {\r\n      return api.get(`/users/${userId}`);\r\n    }\r\n    return Promise.reject('No user logged in');\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG;EAC1BC,MAAM,EAAEA,CAAA,KAAMhB,GAAG,CAACiB,GAAG,CAAC,SAAS,CAAC;EAChC;EACAC,OAAO,EAAGC,EAAE,IAAKnB,GAAG,CAACiB,GAAG,CAAC,WAAWE,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC;EACpDC,aAAa,EAAEA,CAAA,KAAMrB,GAAG,CAACiB,GAAG,CAAC,oCAAoC,CAAC;EAClEK,WAAW,EAAEA,CAAA,KAAMtB,GAAG,CAACiB,GAAG,CAAC,mCAAmC;AAChE,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG;EAC3BP,MAAM,EAAEA,CAAA,KAAMhB,GAAG,CAACiB,GAAG,CAAC,UAAU,CAAC;EACjCC,OAAO,EAAGC,EAAE,IAAKnB,GAAG,CAACiB,GAAG,CAAC,YAAYE,EAAE,EAAE;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMK,eAAe,GAAG;EAC7BR,MAAM,EAAEA,CAAA,KAAMhB,GAAG,CAACiB,GAAG,CAAC,YAAY,CAAC;EACnCC,OAAO,EAAGC,EAAE,IAAKnB,GAAG,CAACiB,GAAG,CAAC,cAAcE,EAAE,EAAE,CAAC;EAC5CM,YAAY,EAAGC,OAAO,IAAK1B,GAAG,CAACiB,GAAG,CAAC,sBAAsBS,OAAO,EAAE,CAAC;EACnEC,aAAa,EAAGC,QAAQ,IAAK5B,GAAG,CAACiB,GAAG,CAAC,uBAAuBW,QAAQ,EAAE,CAAC;EACvEC,mBAAmB,EAAEA,CAACH,OAAO,EAAEE,QAAQ,KACrC5B,GAAG,CAACiB,GAAG,CAAC,sBAAsBS,OAAO,aAAaE,QAAQ,EAAE,CAAC;EAC/DE,SAAS,EAAGC,IAAI,IAAK/B,GAAG,CAACiB,GAAG,CAAC,mBAAmBc,IAAI,EAAE;AACxD,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,eAAe,EAAGC,UAAU,IAAKlC,GAAG,CAACiB,GAAG,CAAC,qBAAqBiB,UAAU,EAAE,CAAC;EAC3EC,UAAU,EAAEA,CAACC,MAAM,EAAEC,QAAQ,KAAKrC,GAAG,CAACsC,KAAK,CAAC,UAAUF,MAAM,EAAE,EAAEC,QAAQ;AAC1E,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG;EAC5BvB,MAAM,EAAEA,CAAA,KAAMhB,GAAG,CAACiB,GAAG,CAAC,WAAW,CAAC;EAClCC,OAAO,EAAGC,EAAE,IAAKnB,GAAG,CAACiB,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;EAC3CqB,WAAW,EAAGC,MAAM,IAAKzC,GAAG,CAACiB,GAAG,CAAC,oBAAoBwB,MAAM,EAAE,CAAC;EAC9DxC,MAAM,EAAGyC,WAAW,IAAK1C,GAAG,CAAC2C,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;EAC3DE,MAAM,EAAEA,CAACzB,EAAE,EAAEuB,WAAW,KAAK1C,GAAG,CAAC6C,GAAG,CAAC,aAAa1B,EAAE,EAAE,EAAEuB,WAAW,CAAC;EACpEI,MAAM,EAAG3B,EAAE,IAAKnB,GAAG,CAAC8C,MAAM,CAAC,aAAa3B,EAAE,EAAE;AAC9C,CAAC;;AAED;AACA,OAAO,MAAM4B,WAAW,GAAG;EACzBC,KAAK,EAAGC,WAAW,IAAKjD,GAAG,CAAC2C,IAAI,CAAC,QAAQ,EAAEM,WAAW,CAAC;EACvDC,QAAQ,EAAGC,QAAQ,IAAKnD,GAAG,CAAC2C,IAAI,CAAC,QAAQ,EAAEQ,QAAQ,CAAC;EACpDC,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMX,MAAM,GAAGhC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,IAAI+B,MAAM,EAAE;MACV,OAAOzC,GAAG,CAACiB,GAAG,CAAC,UAAUwB,MAAM,EAAE,CAAC;IACpC;IACA,OAAO5B,OAAO,CAACC,MAAM,CAAC,mBAAmB,CAAC;EAC5C;AACF,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}