{"ast":null,"code":"var _jsxFileName = \"D:\\\\Zalo Received Files\\\\cinema-booking\\\\src\\\\context\\\\BookingContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { bookingService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingContext = /*#__PURE__*/createContext();\nexport const useBooking = () => {\n  _s();\n  return useContext(BookingContext);\n};\n_s(useBooking, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const BookingProvider = ({\n  children\n}) => {\n  _s2();\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [selectedCinema, setSelectedCinema] = useState(null);\n  const [selectedShowTime, setSelectedShowTime] = useState(null);\n  const [selectedSeats, setSelectedSeats] = useState([]);\n  const [bookingStep, setBookingStep] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const resetBooking = () => {\n    setSelectedMovie(null);\n    setSelectedCinema(null);\n    setSelectedShowTime(null);\n    setSelectedSeats([]);\n    setBookingStep(1);\n    setError(null);\n  };\n  const selectMovie = movie => {\n    setSelectedMovie(movie);\n    setBookingStep(2);\n  };\n  const selectCinema = cinema => {\n    setSelectedCinema(cinema);\n    setBookingStep(3);\n  };\n  const selectShowTime = showTime => {\n    setSelectedShowTime(showTime);\n    setBookingStep(4);\n  };\n  const toggleSeatSelection = seat => {\n    if (seat.isAvailable) {\n      const isSeatSelected = selectedSeats.some(s => s.id === seat.id);\n      if (isSeatSelected) {\n        setSelectedSeats(selectedSeats.filter(s => s.id !== seat.id));\n      } else {\n        setSelectedSeats([...selectedSeats, seat]);\n      }\n    }\n  };\n  const calculateTotalPrice = () => {\n    return selectedSeats.reduce((total, seat) => total + seat.price, 0);\n  };\n  const completeBooking = async userId => {\n    try {\n      setLoading(true);\n      setError(null);\n      if (!selectedMovie || !selectedCinema || !selectedShowTime || selectedSeats.length === 0) {\n        throw new Error('Vui lòng hoàn thành quá trình chọn phim, rạp, suất chiếu và ghế ngồi');\n      }\n      const bookingData = {\n        userId,\n        showTimeId: selectedShowTime.id,\n        seatIds: selectedSeats.map(seat => seat.id),\n        totalPrice: calculateTotalPrice(),\n        bookingDate: new Date().toISOString(),\n        status: 'confirmed'\n      };\n      const response = await bookingService.create(bookingData);\n\n      // Cập nhật trạng thái ghế (đánh dấu là đã đặt)\n      for (const seat of selectedSeats) {\n        await bookingService.updateSeat(seat.id, {\n          isAvailable: false\n        });\n      }\n      resetBooking();\n      return response.data;\n    } catch (err) {\n      setError(err.message || 'Đã có lỗi xảy ra khi đặt vé');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    selectedMovie,\n    selectedCinema,\n    selectedShowTime,\n    selectedSeats,\n    bookingStep,\n    loading,\n    error,\n    selectMovie,\n    selectCinema,\n    selectShowTime,\n    toggleSeatSelection,\n    calculateTotalPrice,\n    completeBooking,\n    resetBooking\n  };\n  return /*#__PURE__*/_jsxDEV(BookingContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 10\n  }, this);\n};\n_s2(BookingProvider, \"SeKFNI/EvSvZVCKdiAcxiGraUvU=\");\n_c = BookingProvider;\nvar _c;\n$RefreshReg$(_c, \"BookingProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","bookingService","jsxDEV","_jsxDEV","BookingContext","useBooking","_s","BookingProvider","children","_s2","selectedMovie","setSelectedMovie","selectedCinema","setSelectedCinema","selectedShowTime","setSelectedShowTime","selectedSeats","setSelectedSeats","bookingStep","setBookingStep","loading","setLoading","error","setError","resetBooking","selectMovie","movie","selectCinema","cinema","selectShowTime","showTime","toggleSeatSelection","seat","isAvailable","isSeatSelected","some","s","id","filter","calculateTotalPrice","reduce","total","price","completeBooking","userId","length","Error","bookingData","showTimeId","seatIds","map","totalPrice","bookingDate","Date","toISOString","status","response","create","updateSeat","data","err","message","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Zalo Received Files/cinema-booking/src/context/BookingContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { bookingService } from '../services/api';\r\n\r\nconst BookingContext = createContext();\r\n\r\nexport const useBooking = () => useContext(BookingContext);\r\n\r\nexport const BookingProvider = ({ children }) => {\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [selectedCinema, setSelectedCinema] = useState(null);\r\n  const [selectedShowTime, setSelectedShowTime] = useState(null);\r\n  const [selectedSeats, setSelectedSeats] = useState([]);\r\n  const [bookingStep, setBookingStep] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const resetBooking = () => {\r\n    setSelectedMovie(null);\r\n    setSelectedCinema(null);\r\n    setSelectedShowTime(null);\r\n    setSelectedSeats([]);\r\n    setBookingStep(1);\r\n    setError(null);\r\n  };\r\n\r\n  const selectMovie = (movie) => {\r\n    setSelectedMovie(movie);\r\n    setBookingStep(2);\r\n  };\r\n\r\n  const selectCinema = (cinema) => {\r\n    setSelectedCinema(cinema);\r\n    setBookingStep(3);\r\n  };\r\n\r\n  const selectShowTime = (showTime) => {\r\n    setSelectedShowTime(showTime);\r\n    setBookingStep(4);\r\n  };\r\n\r\n  const toggleSeatSelection = (seat) => {\r\n    if (seat.isAvailable) {\r\n      const isSeatSelected = selectedSeats.some((s) => s.id === seat.id);\r\n      \r\n      if (isSeatSelected) {\r\n        setSelectedSeats(selectedSeats.filter((s) => s.id !== seat.id));\r\n      } else {\r\n        setSelectedSeats([...selectedSeats, seat]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const calculateTotalPrice = () => {\r\n    return selectedSeats.reduce((total, seat) => total + seat.price, 0);\r\n  };\r\n\r\n  const completeBooking = async (userId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      if (!selectedMovie || !selectedCinema || !selectedShowTime || selectedSeats.length === 0) {\r\n        throw new Error('Vui lòng hoàn thành quá trình chọn phim, rạp, suất chiếu và ghế ngồi');\r\n      }\r\n\r\n      const bookingData = {\r\n        userId,\r\n        showTimeId: selectedShowTime.id,\r\n        seatIds: selectedSeats.map((seat) => seat.id),\r\n        totalPrice: calculateTotalPrice(),\r\n        bookingDate: new Date().toISOString(),\r\n        status: 'confirmed',\r\n      };\r\n\r\n      const response = await bookingService.create(bookingData);\r\n      \r\n      // Cập nhật trạng thái ghế (đánh dấu là đã đặt)\r\n      for (const seat of selectedSeats) {\r\n        await bookingService.updateSeat(seat.id, { isAvailable: false });\r\n      }\r\n\r\n      resetBooking();\r\n      return response.data;\r\n    } catch (err) {\r\n      setError(err.message || 'Đã có lỗi xảy ra khi đặt vé');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    selectedMovie,\r\n    selectedCinema,\r\n    selectedShowTime,\r\n    selectedSeats,\r\n    bookingStep,\r\n    loading,\r\n    error,\r\n    selectMovie,\r\n    selectCinema,\r\n    selectShowTime,\r\n    toggleSeatSelection,\r\n    calculateTotalPrice,\r\n    completeBooking,\r\n    resetBooking,\r\n  };\r\n\r\n  return <BookingContext.Provider value={value}>{children}</BookingContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}