{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import styled from 'styled-components';\n// import Header from '../components/common/Header';\n// import Footer from '../components/common/Footer';\n// import CinemaList from '../components/booking/CinemaList';\n// import ShowTimeList from '../components/booking/ShowTimeList';\n// import { useBooking } from '../context/BookingContext';\n// import { useAuth } from '../context/AuthContext';\n// import { movieService, cinemaService, showTimeService } from '../services/api';\n// import Button from '../components/common/Button';\n// import Loading from '../components/common/Loading';\n\n// const PageContainer = styled.div`\n//   background-color: #0f0f1e;\n//   color: #fff;\n//   min-height: 100vh;\n// `;\n\n// const ContentContainer = styled.div`\n//   max-width: 1000px;\n//   margin: 0 auto;\n//   padding: 2rem;\n// `;\n\n// const PageTitle = styled.h1`\n//   font-size: 2rem;\n//   margin-bottom: 2rem;\n// `;\n\n// const MovieInfo = styled.div`\n//   display: flex;\n//   margin-bottom: 2rem;\n//   background: #16213e;\n//   border-radius: 8px;\n//   overflow: hidden;\n// `;\n\n// const MoviePoster = styled.img`\n//   width: 120px;\n//   height: 180px;\n//   object-fit: cover;\n// `;\n\n// const MovieDetails = styled.div`\n//   padding: 1rem;\n//   flex: 1;\n// `;\n\n// const MovieTitle = styled.h2`\n//   margin: 0 0 0.5rem;\n//   font-size: 1.5rem;\n// `;\n\n// const MovieMeta = styled.div`\n//   color: #a0a0a0;\n//   font-size: 0.9rem;\n//   margin-bottom: 1rem;\n// `;\n\n// const BookingGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr;\n//   gap: 2rem;\n\n//   @media (min-width: 768px) {\n//     grid-template-columns: 1fr 1fr;\n//   }\n// `;\n\n// const ButtonContainer = styled.div`\n//   margin-top: 2rem;\n//   display: flex;\n//   justify-content: space-between;\n// `;\n\n// const BookingPage = () => {\n//   const { id } = useParams();\n//   const navigate = useNavigate();\n//   const { currentUser } = useAuth();\n//   const { \n//     selectedMovie, \n//     selectedCinema, \n//     selectedShowTime, \n//     selectMovie, \n//     selectCinema, \n//     selectShowTime, \n//     resetBooking \n//   } = useBooking();\n\n//   const [movie, setMovie] = useState(null);\n//   const [cinemas, setCinemas] = useState([]);\n//   const [showTimes, setShowTimes] = useState([]);\n//   const [selectedDate, setSelectedDate] = useState(new Date());\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   // Fetch dữ liệu movie và các rạp chiếu\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         setLoading(true);\n\n//         // Fetch thông tin phim\n//         const movieResponse = await movieService.getById(id);\n//         const movieData = movieResponse.data;\n//         setMovie(movieData);\n//         selectMovie(movieData);\n\n//         // Fetch danh sách rạp\n//         const cinemasResponse = await cinemaService.getAll();\n//         setCinemas(cinemasResponse.data);\n\n//         // Fetch lịch chiếu của phim\n//         const showTimesResponse = await showTimeService.getByMovieId(id);\n//         setShowTimes(showTimesResponse.data);\n\n//       } catch (err) {\n//         console.error('Error fetching booking data:', err);\n//         setError('Không thể tải thông tin đặt vé. Vui lòng thử lại sau.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     resetBooking();\n//     fetchData();\n//   }, [id, resetBooking, selectMovie]);\n\n//   const handleCinemaSelect = (cinema) => {\n//     selectCinema(cinema);\n//     selectShowTime(null); // Reset chọn suất chiếu khi đổi rạp\n//   };\n\n//   const handleDateSelect = (date) => {\n//     setSelectedDate(date);\n//     selectShowTime(null); // Reset chọn suất chiếu khi đổi ngày\n//   };\n\n//   const handleShowTimeSelect = (showTime) => {\n//     selectShowTime(showTime);\n//   };\n\n//   const handleBack = () => {\n//     navigate(`/movies/${id}`);\n//   };\n\n//   const handleContinue = () => {\n//     if (!currentUser) {\n//       if (window.confirm('Vui lòng đăng nhập để tiếp tục đặt vé. Bạn có muốn đăng nhập ngay?')) {\n//         navigate('/login');\n//       }\n//       return;\n//     }\n\n//     if (!selectedMovie || !selectedCinema || !selectedShowTime) {\n//       alert('Vui lòng chọn rạp và suất chiếu để tiếp tục.');\n//       return;\n//     }\n\n//     navigate('/booking/seats');\n//   };\n\n//   // Lọc lịch chiếu theo rạp đã chọn\n//   const filteredShowTimes = selectedCinema \n//     ? showTimes.filter(showtime => showtime.cinemaId === selectedCinema.id)\n//     : [];\n\n//   if (loading) return (\n//     <PageContainer>\n//       <Header />\n//       <ContentContainer>\n//         <Loading text=\"Đang tải thông tin đặt vé...\" />\n//       </ContentContainer>\n//       <Footer />\n//     </PageContainer>\n//   );\n\n//   if (error) return (\n//     <PageContainer>\n//       <Header />\n//       <ContentContainer>\n//         <div>{error}</div>\n//         <Button variant=\"primary\" onClick={() => navigate('/movies')}>\n//           Quay lại danh sách phim\n//         </Button>\n//       </ContentContainer>\n//       <Footer />\n//     </PageContainer>\n//   );\n\n//   if (!movie) return (\n//     <PageContainer>\n//       <Header />\n//       <ContentContainer>\n//         <div>Không tìm thấy thông tin phim</div>\n//         <Button variant=\"primary\" onClick={() => navigate('/movies')}>\n//           Quay lại danh sách phim\n//         </Button>\n//       </ContentContainer>\n//       <Footer />\n//     </PageContainer>\n//   );\n\n//   return (\n//     <PageContainer>\n//       <Header />\n\n//       <ContentContainer>\n//         <PageTitle>Đặt vé xem phim</PageTitle>\n\n//         <MovieInfo>\n//           <MoviePoster src={movie.poster} alt={movie.title} />\n//           <MovieDetails>\n//             <MovieTitle>{movie.title}</MovieTitle>\n//             <MovieMeta>\n//               {Math.floor(movie.duration / 60)}h {movie.duration % 60}m • {movie.genre.join(', ')}\n//             </MovieMeta>\n//           </MovieDetails>\n//         </MovieInfo>\n\n//         <BookingGrid>\n//           <CinemaList \n//             cinemas={cinemas}\n//             selectedCinema={selectedCinema}\n//             onSelectCinema={handleCinemaSelect}\n//           />\n\n//           {selectedCinema && (\n//             <ShowTimeList \n//               showTimes={filteredShowTimes}\n//               selectedDate={selectedDate}\n//               selectedShowTime={selectedShowTime}\n//               onSelectDate={handleDateSelect}\n//               onSelectShowTime={handleShowTimeSelect}\n//               emptyMessage=\"Không có suất chiếu cho phim này tại rạp đã chọn\"\n//             />\n//           )}\n//         </BookingGrid>\n\n//         <ButtonContainer>\n//           <Button variant=\"secondary\" onClick={handleBack}>\n//             Quay lại\n//           </Button>\n//           <Button \n//             variant=\"primary\" \n//             onClick={handleContinue}\n//             disabled={!selectedCinema || !selectedShowTime}\n//           >\n//             Tiếp tục\n//           </Button>\n//         </ButtonContainer>\n//       </ContentContainer>\n\n//       <Footer />\n//     </PageContainer>\n//   );\n// };\n\n// export default BookingPage;","map":{"version":3,"names":[],"sources":["D:/Zalo Received Files/cinema-booking/src/pages/BookingPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import styled from 'styled-components';\r\n// import Header from '../components/common/Header';\r\n// import Footer from '../components/common/Footer';\r\n// import CinemaList from '../components/booking/CinemaList';\r\n// import ShowTimeList from '../components/booking/ShowTimeList';\r\n// import { useBooking } from '../context/BookingContext';\r\n// import { useAuth } from '../context/AuthContext';\r\n// import { movieService, cinemaService, showTimeService } from '../services/api';\r\n// import Button from '../components/common/Button';\r\n// import Loading from '../components/common/Loading';\r\n\r\n// const PageContainer = styled.div`\r\n//   background-color: #0f0f1e;\r\n//   color: #fff;\r\n//   min-height: 100vh;\r\n// `;\r\n\r\n// const ContentContainer = styled.div`\r\n//   max-width: 1000px;\r\n//   margin: 0 auto;\r\n//   padding: 2rem;\r\n// `;\r\n\r\n// const PageTitle = styled.h1`\r\n//   font-size: 2rem;\r\n//   margin-bottom: 2rem;\r\n// `;\r\n\r\n// const MovieInfo = styled.div`\r\n//   display: flex;\r\n//   margin-bottom: 2rem;\r\n//   background: #16213e;\r\n//   border-radius: 8px;\r\n//   overflow: hidden;\r\n// `;\r\n\r\n// const MoviePoster = styled.img`\r\n//   width: 120px;\r\n//   height: 180px;\r\n//   object-fit: cover;\r\n// `;\r\n\r\n// const MovieDetails = styled.div`\r\n//   padding: 1rem;\r\n//   flex: 1;\r\n// `;\r\n\r\n// const MovieTitle = styled.h2`\r\n//   margin: 0 0 0.5rem;\r\n//   font-size: 1.5rem;\r\n// `;\r\n\r\n// const MovieMeta = styled.div`\r\n//   color: #a0a0a0;\r\n//   font-size: 0.9rem;\r\n//   margin-bottom: 1rem;\r\n// `;\r\n\r\n// const BookingGrid = styled.div`\r\n//   display: grid;\r\n//   grid-template-columns: 1fr;\r\n//   gap: 2rem;\r\n  \r\n//   @media (min-width: 768px) {\r\n//     grid-template-columns: 1fr 1fr;\r\n//   }\r\n// `;\r\n\r\n// const ButtonContainer = styled.div`\r\n//   margin-top: 2rem;\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n// `;\r\n\r\n// const BookingPage = () => {\r\n//   const { id } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const { currentUser } = useAuth();\r\n//   const { \r\n//     selectedMovie, \r\n//     selectedCinema, \r\n//     selectedShowTime, \r\n//     selectMovie, \r\n//     selectCinema, \r\n//     selectShowTime, \r\n//     resetBooking \r\n//   } = useBooking();\r\n  \r\n//   const [movie, setMovie] = useState(null);\r\n//   const [cinemas, setCinemas] = useState([]);\r\n//   const [showTimes, setShowTimes] = useState([]);\r\n//   const [selectedDate, setSelectedDate] = useState(new Date());\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n  \r\n//   // Fetch dữ liệu movie và các rạp chiếu\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         setLoading(true);\r\n        \r\n//         // Fetch thông tin phim\r\n//         const movieResponse = await movieService.getById(id);\r\n//         const movieData = movieResponse.data;\r\n//         setMovie(movieData);\r\n//         selectMovie(movieData);\r\n        \r\n//         // Fetch danh sách rạp\r\n//         const cinemasResponse = await cinemaService.getAll();\r\n//         setCinemas(cinemasResponse.data);\r\n        \r\n//         // Fetch lịch chiếu của phim\r\n//         const showTimesResponse = await showTimeService.getByMovieId(id);\r\n//         setShowTimes(showTimesResponse.data);\r\n        \r\n//       } catch (err) {\r\n//         console.error('Error fetching booking data:', err);\r\n//         setError('Không thể tải thông tin đặt vé. Vui lòng thử lại sau.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n    \r\n//     resetBooking();\r\n//     fetchData();\r\n//   }, [id, resetBooking, selectMovie]);\r\n  \r\n//   const handleCinemaSelect = (cinema) => {\r\n//     selectCinema(cinema);\r\n//     selectShowTime(null); // Reset chọn suất chiếu khi đổi rạp\r\n//   };\r\n  \r\n//   const handleDateSelect = (date) => {\r\n//     setSelectedDate(date);\r\n//     selectShowTime(null); // Reset chọn suất chiếu khi đổi ngày\r\n//   };\r\n  \r\n//   const handleShowTimeSelect = (showTime) => {\r\n//     selectShowTime(showTime);\r\n//   };\r\n  \r\n//   const handleBack = () => {\r\n//     navigate(`/movies/${id}`);\r\n//   };\r\n  \r\n//   const handleContinue = () => {\r\n//     if (!currentUser) {\r\n//       if (window.confirm('Vui lòng đăng nhập để tiếp tục đặt vé. Bạn có muốn đăng nhập ngay?')) {\r\n//         navigate('/login');\r\n//       }\r\n//       return;\r\n//     }\r\n    \r\n//     if (!selectedMovie || !selectedCinema || !selectedShowTime) {\r\n//       alert('Vui lòng chọn rạp và suất chiếu để tiếp tục.');\r\n//       return;\r\n//     }\r\n    \r\n//     navigate('/booking/seats');\r\n//   };\r\n  \r\n//   // Lọc lịch chiếu theo rạp đã chọn\r\n//   const filteredShowTimes = selectedCinema \r\n//     ? showTimes.filter(showtime => showtime.cinemaId === selectedCinema.id)\r\n//     : [];\r\n\r\n//   if (loading) return (\r\n//     <PageContainer>\r\n//       <Header />\r\n//       <ContentContainer>\r\n//         <Loading text=\"Đang tải thông tin đặt vé...\" />\r\n//       </ContentContainer>\r\n//       <Footer />\r\n//     </PageContainer>\r\n//   );\r\n\r\n//   if (error) return (\r\n//     <PageContainer>\r\n//       <Header />\r\n//       <ContentContainer>\r\n//         <div>{error}</div>\r\n//         <Button variant=\"primary\" onClick={() => navigate('/movies')}>\r\n//           Quay lại danh sách phim\r\n//         </Button>\r\n//       </ContentContainer>\r\n//       <Footer />\r\n//     </PageContainer>\r\n//   );\r\n\r\n//   if (!movie) return (\r\n//     <PageContainer>\r\n//       <Header />\r\n//       <ContentContainer>\r\n//         <div>Không tìm thấy thông tin phim</div>\r\n//         <Button variant=\"primary\" onClick={() => navigate('/movies')}>\r\n//           Quay lại danh sách phim\r\n//         </Button>\r\n//       </ContentContainer>\r\n//       <Footer />\r\n//     </PageContainer>\r\n//   );\r\n\r\n//   return (\r\n//     <PageContainer>\r\n//       <Header />\r\n      \r\n//       <ContentContainer>\r\n//         <PageTitle>Đặt vé xem phim</PageTitle>\r\n        \r\n//         <MovieInfo>\r\n//           <MoviePoster src={movie.poster} alt={movie.title} />\r\n//           <MovieDetails>\r\n//             <MovieTitle>{movie.title}</MovieTitle>\r\n//             <MovieMeta>\r\n//               {Math.floor(movie.duration / 60)}h {movie.duration % 60}m • {movie.genre.join(', ')}\r\n//             </MovieMeta>\r\n//           </MovieDetails>\r\n//         </MovieInfo>\r\n        \r\n//         <BookingGrid>\r\n//           <CinemaList \r\n//             cinemas={cinemas}\r\n//             selectedCinema={selectedCinema}\r\n//             onSelectCinema={handleCinemaSelect}\r\n//           />\r\n          \r\n//           {selectedCinema && (\r\n//             <ShowTimeList \r\n//               showTimes={filteredShowTimes}\r\n//               selectedDate={selectedDate}\r\n//               selectedShowTime={selectedShowTime}\r\n//               onSelectDate={handleDateSelect}\r\n//               onSelectShowTime={handleShowTimeSelect}\r\n//               emptyMessage=\"Không có suất chiếu cho phim này tại rạp đã chọn\"\r\n//             />\r\n//           )}\r\n//         </BookingGrid>\r\n        \r\n//         <ButtonContainer>\r\n//           <Button variant=\"secondary\" onClick={handleBack}>\r\n//             Quay lại\r\n//           </Button>\r\n//           <Button \r\n//             variant=\"primary\" \r\n//             onClick={handleContinue}\r\n//             disabled={!selectedCinema || !selectedShowTime}\r\n//           >\r\n//             Tiếp tục\r\n//           </Button>\r\n//         </ButtonContainer>\r\n//       </ContentContainer>\r\n      \r\n//       <Footer />\r\n//     </PageContainer>\r\n//   );\r\n// };\r\n\r\n// export default BookingPage;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}